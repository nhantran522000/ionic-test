name: Mobile Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build web assets
        run: pnpm run build

      - name: Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: www/

  deploy-android:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: www/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Add Capacitor platforms
        run: |
          pnpm exec npx cap add android
          pnpm exec npx cap add ios

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Sync Capacitor Android
        run: pnpm exec npx cap sync android

      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > android/app/release.keystore

      - name: Build and Sign Android APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=app/release.keystore \
            -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-release-signed
          path: android/app/build/outputs/apk/release/app-release.apk

  deploy-ios:
    runs-on: macos-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download web build
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: www/

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Add Capacitor platforms
        run: |
          pnpm exec npx cap add android
          pnpm exec npx cap add ios

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.0"

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Sync Capacitor iOS
        run: pnpm exec npx cap sync ios

      - name: Install iOS dependencies
        run: |
          cd ios/App
          pod install

      - name: Setup iOS Signing
        run: |
          # Create keychain
          security create-keychain -p "temp123" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "temp123" build.keychain
          security set-keychain-settings -t 3600 -u build.keychain

          # Import certificate
          echo "${{ secrets.IOS_CERTIFICATE_BASE64 }}" | base64 --decode > certificate.p12
          security import certificate.p12 -k build.keychain -P "${{ secrets.IOS_CERTIFICATE_PASSWORD }}" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "temp123" build.keychain

          # Install provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Update iOS project settings
        run: |
          cd ios/App
          # Update team ID in project
          sed -i '' 's/DEVELOPMENT_TEAM = "";/DEVELOPMENT_TEAM = "${{ secrets.IOS_TEAM_ID }}";/g' App.xcodeproj/project.pbxproj

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild -workspace App/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination generic/platform=iOS \
            -allowProvisioningUpdates \
            build

      - name: Create iOS Archive
        run: |
          cd ios
          xcodebuild -workspace App/App.xcworkspace \
            -scheme App \
            -configuration Release \
            -destination generic/platform=iOS \
            -allowProvisioningUpdates \
            archive -archivePath App.xcarchive

      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
            -archivePath App.xcarchive \
            -exportPath ./output \
            -exportOptionsPlist ../ExportOptions.plist

      - name: Upload iOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ios/output/*.ipa
